spring:
  profiles:
    active: h2
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-authentication-method: post
            redirect-uri: http://localhost:8080/auth/oauth2/kakao
            authorization-grant-type: authorization_code  # 여기에 인증 방식을 지정
            scope: profile
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize  # 카카오 인증 엔드포인트
            token-uri: https://kauth.kakao.com/oauth/token  # 카카오 토큰 엔드포인트
            user-info-uri: https://kapi.kakao.com/v2/user/me  # 카카오 사용자 정보 엔드포인트
            user-name-attribute: id  # 사용자 이름 속성
mail:
  address:
    admin: admin@email.com #실제 서비스 적용시에는 반드시 환경변수화 해야함
jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 120
---
spring:
  profiles:
    active: h2
  h2:
    console:
      # H2 데이터베이스 콘솔을 활성화합니다. 이를 통해 웹 브라우저에서 H2 데이터베이스를 직접 접근
      enabled: true
      # H2 데이터베이스 콘솔의 경로를 '/h2'로 설정
      path: /h2
  datasource:
    # 데이터 소스의 URL을 설정합니다. 여기서는 메모리 내 H2 데이터베이스를 사용, 데이터베이스 이름은 'test'
    url: jdbc:h2:mem:test
  jpa:
    hibernate:
      # Hibernate가 시작할 때 데이터베이스 스키마를 생성하도록 설정
      ddl-auto: create
    # Hibernate가 실행하는 SQL 문을 콘솔에 표시하도록 설정
    show-sql: true
    properties:
      hibernate:
        #  Hibernate가 실행하는 SQL 문을 보기 좋게 포맷팅하도록 설정
        format_sql: true
server:
  port: 8080
  servlet:
    encoding:
      # 응답 본문의 인코딩을 강제로 설정
      force-response: true