spring:
  profiles:
    active: h2
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-authentication-method: post
            redirect-uri: http://localhost:8080/auth/oauth2/kakao
            authorization-grant-type: authorization_code  # 인증 방식
            scope: profile
          google:
            client-id: ${LIB_PROJECT_GOOGLE_CLIENT_ID}
            client-secret: ${LIB_PROJECT_GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/auth/oauth2/google
            authorization-grant-type: authorization_code  #인증 방식
            scope: profile, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize  # 카카오 인증 엔드포인트
            token-uri: https://kauth.kakao.com/oauth/token  # 카카오 토큰 엔드포인트
            user-info-uri: https://kapi.kakao.com/v2/user/me  # 카카오 사용자 정보 엔드포인트
            user-name-attribute: id  # 사용자 이름 속성
          google: # 구글 설정을 provider 아래에 추가
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id

mail:
  address:
    admin: admin@email.com #실제 서비스 적용시에는 반드시 환경변수화 해야함
password:
  address:
    admin: safePassword #실제 서비스 적용시에는 반드시 환경변수화 해야함
jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 120


